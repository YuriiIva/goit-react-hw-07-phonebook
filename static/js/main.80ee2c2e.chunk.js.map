{"version":3,"sources":["components/FindContacts/FindContacts.module.css","components/Contacts /contacts.module.css","redux/contacts/contacrsActions.js","redux/contacts/contactsReducer.js","redux/store.js","components/Contacts /Contacts .jsx","components/FindContacts/FindContacts.jsx","components/InputContacts/InputContacts.jsx","components/App/App.jsx","components/common/Loader/loader.jsx","index.js","components/InputContacts/InputContacts.module.css"],"names":["module","exports","addContactsR","createAction","contacts","payload","id","nanoid","deleteContacts","changeFilter","itemsReducer","createReducer","name","number","builder","addCase","state","action","filter","contact","filterReducer","contactsReducer","combineReducers","items","persistContactsConfig","key","storage","whitelist","blacklist","logger","createLogger","collapsed","getState","logEntry","error","timestamp","store","configureStore","reducer","persistReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","concat","devTools","process","persistor","persistStore","Contacts","onDaleteCard","map","className","s","item","type","onClick","btn","FindContacts","useSelector","dispatch","useDispatch","title","find","input","value","onChange","e","target","InputContacts","onSubmit","useState","setName","setNumber","setId","handleChange","reset","form","preventDefault","some","alert","htmlFor","label","pattern","required","button","App","newContacts","toLowerCase","includes","idDelete","LoaderB","color","height","width","timeout","class","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.80ee2c2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"find\":\"FindContacts_find__372A-\",\"input\":\"FindContacts_input__4fWyi\",\"title\":\"FindContacts_title__-IvSF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"contacts_item__2tTD7\",\"btn\":\"contacts_btn__3HcCm\"};","import { createAction, nanoid } from \"@reduxjs/toolkit\";\n\nconst addContactsR = createAction(\"contacts/items_add\", (contacts) => ({\n  payload: {\n    ...contacts,\n    id: nanoid(),\n    // createdAt: new Date().toISOString(),\n  },\n}));\n\nconst deleteContacts = createAction(\"contacts/items_delete\");\nconst changeFilter = createAction(\"contacts/filter_change\");\n\nexport { addContactsR, deleteContacts, changeFilter };\n","import { createReducer, combineReducers } from \"@reduxjs/toolkit\";\nimport { addContactsR, deleteContacts, changeFilter } from \"./contacrsActions\";\n\nconst contactsFirst = [\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n];\n\n// console.dir(addContactsR.type) ///\"contacts/items_delete\"\n// console.dir(addContactsR.toString) ///\"contacts/items_delete\"\n\n// 1 way\n\n// const itemsReducer = createReducer(contactsFirst, {\n//   [addContactsR]: (state, action) => [...state, action.payload],\n//   [deleteContacts]: (state, action) =>\n//     state.filter((contact) => contact.id !== action.payload),\n// });\n\n// const filterReducer = createReducer(\"\", {\n//   [changeFilter]: (state, action) => action.payload,\n// });\n\n// 2 way\n\nconst itemsReducer = createReducer(contactsFirst, (builder) => {\n  builder\n    .addCase(addContactsR, (state, action) => [...state, action.payload])\n    .addCase(deleteContacts, (state, action) =>\n      state.filter((contact) => contact.id !== action.payload)\n    );\n});\n\nconst filterReducer = createReducer(\"\", (builder) => {\n  builder.addCase(changeFilter, (state, action) => action.payload);\n});\n\nconst contactsReducer = combineReducers({\n  items: itemsReducer,\n  filter: filterReducer,\n});\nexport default contactsReducer;\n","import { configureStore } from \"@reduxjs/toolkit\";\nimport { createLogger } from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\"; // defaults to localStorage for web\n\nimport contactsReducer from \"./contacts/contactsReducer\";\n\nconst persistContactsConfig = {\n  key: \"items\",\n  storage,\n  whitelist: [\"items\"],\n  blacklist: [\"filter\"],\n};\n\nconst logger = createLogger({\n  collapsed: (getState, action, logEntry) => !logEntry.error,\n  timestamp: false,\n});\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(persistContactsConfig, contactsReducer),\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }).concat(logger),\n  devTools: process.env.NODE_ENV !== \"production\",\n  // preloadedState,\n  // enhancers: [reduxBatch],\n});\n\nconst persistor = persistStore(store);\n\nexport { persistor, store };\n","import s from \"./contacts.module.css\";\nimport { PropTypes } from \"prop-types\";\n\nconst Contacts = ({ items, onDaleteCard }) => {\n  return (\n    <div>\n      <ul>\n        {items.map(({ name, number, id }) => (\n          <li key={id} className={s.item}>\n            <p>\n              {name}:{number}\n            </p>\n            <button\n              type=\"submit\"\n              onClick={() => onDaleteCard(id)}\n              className={s.btn}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nContacts.propTypes = {\n  items: PropTypes.array,\n  onDaleteCard: PropTypes.func,\n};\nexport default Contacts;\n","import s from \"./FindContacts.module.css\";\n// import { PropTypes } from \"prop-types\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changeFilter } from \"../../redux/contacts/contacrsActions\";\n\nconst FindContacts = () => {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <h2 className={s.title}>Contacts</h2>\n\n      <form action=\"\">\n        <label className={s.find}>\n          Finde contacts by name\n          <input\n            type=\"text\"\n            className={s.input}\n            value={filter}\n            onChange={(e) => dispatch(changeFilter(e.target.value))}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\n\n// FindContacts.propTypes = {\n//   onFilterChange: PropTypes.func,\n//   value: PropTypes.string,\n// };\n\nexport default FindContacts;\n","import s from \"./InputContacts.module.css\";\nimport { useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { GiBookCover } from \"react-icons/gi\";\n\nimport { nanoid } from \"nanoid\";\n\nconst InputContacts = ({ onSubmit }) => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const [id, setId] = useState(\"\");\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n\n      default:\n        return;\n    }\n    // setId(nanoid(5));\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (contacts.some((contact) => name === contact.name)) {\n      alert(`${name} is alredy in contact`);\n      return;\n    }\n    onSubmit({ name, number, id });\n    reset();\n  };\n\n  const reset = () => {\n    setName(\"\");\n    setNumber(\"\");\n    setId(\"\");\n  };\n  return (\n    <div>\n      <h1 className={s.title}>\n        <GiBookCover />\n        Phonebook\n      </h1>\n      <form className={s.form} onSubmit={handleSubmit}>\n        <label htmlFor=\"\" className={s.label}>\n          name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            onChange={handleChange}\n            required\n          />\n        </label>\n        <label htmlFor=\"\" className={s.label}>\n          number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default InputContacts;\n","import { useSelector, useDispatch } from \"react-redux\";\nimport {\n  addContactsR,\n  deleteContacts,\n} from \"../../redux/contacts/contacrsActions\";\nimport Contacts from \"../Contacts /Contacts \";\nimport FindContacts from \"../FindContacts/FindContacts\";\nimport InputContacts from \"../InputContacts/InputContacts\";\n\nconst App = () => {\n  const contacts = useSelector((state) => state.contacts.items);\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const addContacts = (newContacts) => {\n    dispatch(addContactsR(newContacts));\n  };\n\n  const getFilterContacts = () => {\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const onDaleteCard = (idDelete) => {\n    dispatch(deleteContacts(idDelete));\n  };\n\n  return (\n    <div>\n      <InputContacts onSubmit={addContacts} />\n      <FindContacts />\n      <Contacts items={getFilterContacts(filter)} onDaleteCard={onDaleteCard} />\n    </div>\n  );\n};\n\nexport default App;\n","import Loader from \"react-loader-spinner\";\n\nconst LoaderB = () => {\n  return (\n    <Loader\n      type=\"Puff\"\n      color=\"#00BFFF\"\n      height={100}\n      width={100}\n      timeout={3000}\n      class=\"lod\" //3 secs\n    />\n  );\n};\nexport default LoaderB;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { persistor, store } from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport Loader from \"./components/common/Loader/loader\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loader />} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"InputContacts_form__GZK3_\",\"label\":\"InputContacts_label__1aefF\",\"button\":\"InputContacts_button__1_9Jn\",\"title\":\"InputContacts_title__3eXMi\"};"],"sourceRoot":""}